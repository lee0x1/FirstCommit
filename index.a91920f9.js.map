{"mappings":";;;;;;;CAQC,WACG,aAEA,IAAMA,EAAcC,aAAaC,QAAQ,SAC/BC,EAAoBC,SAASC,cAAc,qBAE/CC,EAAoB,WACtB,OAAIN,IAIGO,OAAOC,WAAW,iCAAiCC,QACpD,QACA,OACV,EAEMC,EAAW,SAAUC,GAET,UAAVA,GACAJ,OAAOC,WAAW,iCAAiCC,SAEnDL,SAASQ,gBAAgBC,aAAa,gBAAiB,SACnDV,EAAkBW,YAAc,eAEpCV,SAASQ,gBAAgBC,aAAa,gBAAiB,QACnDV,EAAkBW,YAAc,aAE5C,EAGAP,OACKC,WAAW,gCACXO,iBAAiB,UAAU,WACJ,UAAhBf,GAA2C,SAAhBA,GAC3BU,EAASJ,IAEjB,IAEJC,OAAOQ,iBAAiB,oBAAoB,WAExCL,EAASJ,KAET,IAAMU,EAAeZ,SAASC,cAAc,eAEhB,SAAxBC,MAAgCU,EAAaC,SAAU,GAE3DD,EAAaD,iBAAiB,SAAS,SAACG,GAChCA,EAAEC,OAAOF,QACTb,SAASQ,gBAAgBC,aAAa,gBAAiB,QAEvDT,SAASQ,gBAAgBC,aAAa,gBAAiB,SAE3D,IAAMF,EACFP,SAASQ,gBAAgBQ,aAAa,iBAC1CnB,aAAaoB,QAAQ,QAASV,GAC9BD,EAASC,GACTW,QAAQC,IAAIZ,EAChB,GACJ,GACJ,CA3DC","sources":["src/modules/themeToggle.mjs"],"sourcesContent":["/*!\n * Color mode toggler for Bootstrap's docs (https://getbootstrap.com/)\n * Copyright 2011-2022 The Bootstrap Authors\n * Licensed under the Creative Commons Attribution 3.0 Unported License.\n *\n * Modified by Lee Howard - 2/3/23\n */\n\n(() => {\n    \"use strict\";\n\n    const storedTheme = localStorage.getItem(\"theme\");\n        const colorTogglerLabel = document.querySelector(\"#color-mode-label\");\n\n    const getPreferredTheme = () => {\n        if (storedTheme) {\n            return storedTheme;\n        }\n\n        return window.matchMedia(\"(prefers-color-scheme: light)\").matches\n            ? \"light\"\n            : \"dark\";\n    };\n\n    const setTheme = function (theme) {\n        if (\n            theme === \"light\" &&\n            window.matchMedia(\"(prefers-color-scheme: light)\").matches\n        ) {\n            document.documentElement.setAttribute(\"data-bs-theme\", \"light\");\n                colorTogglerLabel.textContent = \"Light Mode\";\n        } else {\n            document.documentElement.setAttribute(\"data-bs-theme\", \"dark\");\n                colorTogglerLabel.textContent = \" Dark Mode\";\n        }\n    };\n\n\n    window\n        .matchMedia(\"(prefers-color-scheme: dark)\")\n        .addEventListener(\"change\", () => {\n            if (storedTheme !== \"light\" || storedTheme !== \"dark\") {\n                setTheme(getPreferredTheme());\n            }\n        });\n\n    window.addEventListener(\"DOMContentLoaded\", () => {\n        // fix: set theme immedaitly dont see light theme first\n        setTheme(getPreferredTheme());\n\n        const colorToggler = document.querySelector(\"#color-mode\");\n        // set toggle on if local storage theme preference is dark\n        if (getPreferredTheme() === \"dark\") colorToggler.checked = true;\n\n        colorToggler.addEventListener(\"click\", (e) => {\n            if (e.target.checked) {\n                document.documentElement.setAttribute(\"data-bs-theme\", \"dark\");\n            } else {\n                document.documentElement.setAttribute(\"data-bs-theme\", \"light\");\n            }\n            const theme =\n                document.documentElement.getAttribute(\"data-bs-theme\");\n            localStorage.setItem(\"theme\", theme);\n            setTheme(theme);\n            console.log(theme);\n        });\n    });\n})();\n"],"names":["storedTheme","localStorage","getItem","colorTogglerLabel","document","querySelector","getPreferredTheme","window","matchMedia","matches","setTheme","theme","documentElement","setAttribute","textContent","addEventListener","colorToggler","checked","e","target","getAttribute","setItem","console","log"],"version":3,"file":"index.a91920f9.js.map"}