const e=e=>{e.setAttribute("pattern","^[A-Za-z\\d](?:[A-Za-z\\d]|-(?=[A-Za-z\\d])){0,38}$")},t=e=>{e.addEventListener("invalid",(()=>{const t=e.validity;t.valueMissing?e.setCustomValidity("required"):t.patternMismatch?e.setCustomValidity("enter valid github username"):t.tooShort?e.setCustomValidity("too short"):t.tooLong&&e.setCustomValidity("too long")}))},r=e=>{e.addEventListener("input",(()=>{e.setCustomValidity("")}))},o=([e,t],r)=>{t.addEventListener("submit",(o=>{console.info("username submitted"),e.blur(),o.preventDefault(),t.checkValidity(),r(e.value)}))},n={mainHandler:n=>{const a=document.querySelector("#username-input"),i=document.querySelector("#submit-form");e(a),t(a),r(a),o([a,i],n)}},a={constructUrl:e=>"https://api.github.com/search/commits"+`?q=author:${e}`+"&order=asc&sort=committer-date"},i={getData:async(e,t)=>{try{const r=await e(t);return await r.json()}catch(e){return e}}},s=e=>{const t=e.items[0];return{_avatar:t.author.avatar_url,_name:t.commit.author.name,_userHandle:t.author.login,_commitMsg:t.commit.message,_date:t.commit.author.date,_repo:t.repository.name,_profileUrl:t.author.html_url,_commitUrl:t.html_url,_repoUrl:t.repository.html_url}},l=e=>new Date(e).toLocaleDateString(),m={renderTemplate:(e,t,r)=>{if(!document.querySelector(e)){r=document.querySelector(r);const e=(t=document.querySelector(t)).content.cloneNode(!0);r.appendChild(e)}},renderData:e=>{const{_avatar:t,_name:r,_userHandle:o,_commitMsg:n,_date:a,_repo:i,_profileUrl:m,_commitUrl:c,_repoUrl:u}=s(e),d=document.querySelector("#avatar"),p=document.querySelector("#name"),h=document.querySelector("#userhandle"),y=document.querySelector("#commitmsg"),v=document.querySelector("#date"),_=document.querySelector("#repo"),f=document.querySelector("#profileurl"),g=document.querySelector("#commiturl"),q=document.querySelector("#repourl"),L=l(a),S=n.split("\n")[0];d.src=t,p.textContent=r,h.textContent=`@${o}`,y.textContent=S,v.textContent=L,_.textContent=i,f.href=m,g.href=c,q.href=u},removeElement:function(e){const t=document.querySelector(e);t&&t.remove()},elementList:{jumbotron:".jumbotron",cardContainer:".row",notFound:"#container404",template404:"#page404",container:"#container",cardTemplate:"#card-template",card:".card",avatar:"#avatar",name:"#name",userHandle:"#userhandle",commitMsg:"#commitmsg",date:"#date",repo:"#repo",profileUrl:"#profileurl",commitUrl:"#commiturl",repoUrl:"#repourl"}};class c{constructor(e,t,r,o){this.input=e,this.data=t,this.display=r,this.utils=o,console.info("app::running")}run(){this.input.mainHandler((async e=>{try{const t=this.utils.constructUrl(e),r=await this.data.getData(fetch,t);if(void 0===r.items||0===r.items.length)throw this.display.removeElement(this.display.elementList.notFound),this.display.removeElement(this.display.elementList.jumbotron),this.display.removeElement(this.display.elementList.card),this.display.renderTemplate(this.display.elementList.container404,this.display.elementList.template404,this.display.elementList.container),new Error("username not found!");this.display.removeElement(this.display.elementList.jumbotron),this.display.removeElement(this.display.elementList.notFound),this.display.renderTemplate(this.display.elementList.card,this.display.elementList.cardTemplate,this.display.elementList.container),this.display.renderData(r),console.info(r.items[0])}catch(e){console.error(e)}}))}}new c(n,i,m,a).run();
//# sourceMappingURL=index.f5d2fe84.js.map
