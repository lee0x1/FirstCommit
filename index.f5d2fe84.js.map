{"mappings":"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","sources":["src/modules/core/inputService.mjs","src/modules/core/utilityService.mjs","src/modules/core/dataService.mjs","src/modules/core/displayService.mjs","src/modules/application.mjs","src/main.mjs"],"sourcesContent":["// inputService.mjs\n\nconst mainHandler = (callback) => {\n    const usernameInput = document.querySelector(\"#username-input\");\n    const formToSubmit = document.querySelector(\"#submit-form\");\n\n    setupRegExpr(usernameInput);\n    validateInput(usernameInput);\n    resetValidation(usernameInput);\n    submitForm([usernameInput, formToSubmit], callback);\n};\n\nconst setupRegExpr = (input) => {\n    // set regexpr pattern input validation\n    input.setAttribute(\n        \"pattern\",\n        // TODO: explain what this does step by step\n        \"^[A-Za-z\\\\d](?:[A-Za-z\\\\d]|-(?=[A-Za-z\\\\d])){0,38}$\"\n    );\n};\n\nconst validateInput = (input) => {\n    // once its invalid\n    input.addEventListener(\"invalid\", () => {\n        const validityState = input.validity;\n\n        if (validityState.valueMissing) {\n            input.setCustomValidity(\"required\");\n        } else if (validityState.patternMismatch) {\n            input.setCustomValidity(\"enter valid github username\");\n        } else if (validityState.tooShort) {\n            input.setCustomValidity(\"too short\");\n        } else if (validityState.tooLong) {\n            input.setCustomValidity(\"too long\");\n        }\n    });\n};\n\nconst resetValidation = (input) => {\n    // remove validation tooltip when typing again unless still error\n    input.addEventListener(\"input\", () => {\n        input.setCustomValidity(\"\");\n    });\n};\n\nconst submitForm = ([input, form], callback) => {\n    // submit form after validation pass. send callback\n    form.addEventListener(\"submit\", (event) => {\n        console.info(\"username submitted\");\n\n        input.blur();\n        event.preventDefault();\n        form.checkValidity();\n        callback(input.value);\n    });\n};\n\nexport const InputService = {\n    mainHandler: mainHandler,\n};\n","// utilityService.mjs\n\nconst constructUrl = (username) => {\n    const base = `https://api.github.com/search/commits`;\n    const author = `?q=author:${username}`;\n    const sortOrder = `&order=asc&sort=committer-date`;\n\n    const url = base + author + sortOrder;\n    return url;\n};\n\nexport const UtilityService = {\n    constructUrl: constructUrl,\n};\n","// dataService.mjs\n\nconst getData = async (provider, url) => {\n    try {\n        const res = await provider(url);\n        const data = await res.json();\n        return data;\n    } catch (error) {\n        return error;\n    }\n};\n\nexport const DataService = {\n    getData: getData,\n};\n","// displayService.mjs\n\nconst elementList = {\n    jumbotron: \".jumbotron\", // begin template elements\n    cardContainer: \".row\",\n    notFound: \"#container404\",\n    template404: \"#page404\",\n    container: \"#container\",\n    cardTemplate: \"#card-template\",\n    card: \".card\",\n    avatar: \"#avatar\", // begin data elements\n    name: \"#name\",\n    userHandle: \"#userhandle\",\n    commitMsg: \"#commitmsg\",\n    date: \"#date\",\n    repo: \"#repo\",\n    profileUrl: \"#profileurl\",\n    commitUrl: \"#commiturl\",\n    repoUrl: \"#repourl\",\n};\n\nconst removeElement = function (selector) {\n    const element = document.querySelector(selector);\n    if (element) {\n        element.remove();\n    }\n};\n\nconst renderTemplate = (selector, template, container) => {\n    // check if card exists in dom\n    const element = document.querySelector(selector);\n    if (!element) {\n        container = document.querySelector(container);\n        template = document.querySelector(template);\n        const clone = template.content.cloneNode(true);\n        container.appendChild(clone);\n    }\n};\n\nconst renderData = (data) => {\n    // destructure values\n    const {\n        _avatar,\n        _name,\n        _userHandle,\n        _commitMsg,\n        _date,\n        _repo,\n        _profileUrl,\n        _commitUrl,\n        _repoUrl,\n    } = extractUsefulData(data);\n\n    // TODO: refractor, maybe use a loop instead\n    const avatar = document.querySelector(\"#avatar\");\n    const name = document.querySelector(\"#name\");\n    const userHandle = document.querySelector(\"#userhandle\");\n    const commitMsg = document.querySelector(\"#commitmsg\");\n    const date = document.querySelector(\"#date\");\n    const repo = document.querySelector(\"#repo\");\n    const profileUrl = document.querySelector(\"#profileurl\");\n    const commitUrl = document.querySelector(\"#commiturl\");\n    const repoUrl = document.querySelector(\"#repourl\");\n\n    // date format: MM/DD/YYYY\n    const prettyDate = convertDate(_date);\n\n    // remove string after new line is encountered\n    const msg = _commitMsg.split(\"\\n\")[0];\n\n    avatar.src = _avatar;\n    name.textContent = _name;\n    userHandle.textContent = `@${_userHandle}`;\n    commitMsg.textContent = msg;\n    date.textContent = prettyDate;\n    repo.textContent = _repo;\n    profileUrl.href = _profileUrl;\n    commitUrl.href = _commitUrl;\n    repoUrl.href = _repoUrl;\n};\n\nconst extractUsefulData = (data) => {\n    const firstCommit = data.items[0];\n    return {\n        _avatar: firstCommit.author.avatar_url,\n        _name: firstCommit.commit.author.name,\n        _userHandle: firstCommit.author.login,\n        _commitMsg: firstCommit.commit.message,\n        _date: firstCommit.commit.author.date,\n        _repo: firstCommit.repository.name,\n        _profileUrl: firstCommit.author.html_url,\n        _commitUrl: firstCommit.html_url,\n        _repoUrl: firstCommit.repository.html_url,\n    };\n};\n\n// TODO : move to utilities service???\nconst convertDate = (utcDate) => {\n    let date = new Date(utcDate);\n    return date.toLocaleDateString();\n};\n\nexport const DisplayService = {\n    renderTemplate: renderTemplate,\n    renderData: renderData,\n    removeElement: removeElement,\n    elementList: elementList,\n};\n","// application.mjs\n\nclass Application {\n\n    constructor(input, data, display, utils) {\n        this.input = input;\n        this.data = data;\n        this.display = display;\n        this.utils = utils;\n        // TODO: add better logging\n        console.info(`app::running`);\n    }\n\n    run() {\n        this.input.mainHandler(async (input) => {\n            try {\n                const username = this.utils.constructUrl(input);\n                const data = await this.data.getData(fetch, username);\n                const userNotFound = data.items === undefined || data.items.length === 0;\n\n                // check if user exists\n                if (userNotFound) {\n                    // user not found\n\n                    // remove 404 page\n                    this.display.removeElement(\n                        this.display.elementList.notFound\n                    );\n\n                    // remove welcome page\n                    this.display.removeElement(\n                        this.display.elementList.jumbotron\n                    );\n\n                    // remove card\n                    this.display.removeElement(\n                        this.display.elementList.card\n                    );\n\n                    // render 404 page\n                    this.display.renderTemplate(\n                        this.display.elementList.container404,\n                        this.display.elementList.template404,\n                        this.display.elementList.container\n                    );\n\n                    throw new Error(`username not found!`);\n                } else {\n                    // user exists\n\n                    // remove welcome page\n                    this.display.removeElement(\n                        this.display.elementList.jumbotron\n                    );\n\n                    // remove 404 page\n                    this.display.removeElement(\n                        this.display.elementList.notFound\n                    );\n\n                    // render card\n                    this.display.renderTemplate(\n                        this.display.elementList.card,\n                        this.display.elementList.cardTemplate,\n                        this.display.elementList.container\n                    );\n\n                    // poplulate template with data\n                    this.display.renderData(data);\n\n                    // TODO: add better logging\n                    console.info(data.items[0]);\n                }\n                // }\n            } catch (error) {\n                // TODO: Handle error, pass something to show 404 in renderer maybe\n                console.error(error);\n            }\n        });\n    }\n}\n\nexport { Application };\n","// main.mjs\n\nimport { InputService } from \"./modules/core/inputService.mjs\";\nimport { UtilityService } from \"./modules/core/utilityService.mjs\";\nimport { DataService } from \"./modules/core/dataService.mjs\";\nimport { DisplayService } from \"./modules/core/displayService.mjs\";\n\nimport { Application } from \"./modules/application.mjs\";\n\n// run app\n(() => {\n    new Application(\n        InputService,\n        DataService,\n        DisplayService,\n        UtilityService\n    ).run();\n})();\n"],"names":["$37842340d46b7f11$var$setupRegExpr","input","setAttribute","$37842340d46b7f11$var$validateInput","addEventListener","validityState","validity","valueMissing","setCustomValidity","patternMismatch","tooShort","tooLong","$37842340d46b7f11$var$resetValidation","$37842340d46b7f11$var$submitForm","form","callback","event","console","info","blur","preventDefault","checkValidity","value","$37842340d46b7f11$export$1043af0f0a1c6be9","mainHandler","usernameInput","document","querySelector","formToSubmit","$0dd0e58e97bf190f$export$6d7a392c12f13470","constructUrl","username","$5c2b8cba22ebaa71$export$7f2f61054d5119ac","getData","async","provider","url","res","json","error","$bab9f0c87c436e8c$var$extractUsefulData","data","firstCommit","items","_avatar","author","avatar_url","_name","commit","name","_userHandle","login","_commitMsg","message","_date","date","_repo","repository","_profileUrl","html_url","_commitUrl","_repoUrl","$bab9f0c87c436e8c$var$convertDate","utcDate","Date","toLocaleDateString","$bab9f0c87c436e8c$export$f18d8367ee20fa1a","renderTemplate","selector","template","container","clone","content","cloneNode","appendChild","renderData","avatar","userHandle","commitMsg","repo","profileUrl","commitUrl","repoUrl","prettyDate","msg","split","src","textContent","href","removeElement","element","remove","elementList","jumbotron","cardContainer","notFound","template404","cardTemplate","card","$c3afd92c6711b347$export$16975c34e60e1e61","constructor","display","utils","this","run","fetch","undefined","length","container404","Error"],"version":3,"file":"index.f5d2fe84.js.map"}